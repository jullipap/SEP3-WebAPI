syntax = "proto3";

//option java_multiple_files= true;
//option java_package= "via.sep3.databaseserver.protobuff";

option csharp_namespace = "Application";

//package application;//addded

service Rides{
  rpc getRides(EpochTimelineMessage) returns (RidesCollection);
  rpc joinRide(JoinRideDto) returns (ConfirmationMessage);
  rpc createRide(CreateRideDto) returns (Ride);
}

//Probably not needed for now
message EpochTimelineMessage{
  optional int64 epochLowerBound = 1;
  optional int64 epochUpperBound = 2;
}

//thats what i added
message DateTime{
  uint64 epoch = 1;
  int32 year = 2;
  int32 month = 3;
  int32 day = 4;
  int32 hour = 5;
  int32 minute = 6;
  int32 second = 7;
}

message CreateRideDto{
  LocationMessage startLocation = 1;
  LocationMessage destination = 2;
  DateTime startDate = 3;
  string driver = 4;
  int32 capacity = 5;
}

message Ride{
  int32 id = 1;
  LocationMessage startLocation = 2;
  LocationMessage destination = 3;
  DateTime startDate = 4;
  string driver = 5;
  int32 capacity = 6;
}

//thats it thx

message RidesCollection{
  repeated RideMessage rides = 1;
  message RideMessage {
    LocationMessage startLocation = 2;
    LocationMessage endLocation = 3;
    int64 startTime = 4;
    DriverMessage driver = 5;

    //imo that's needed although not included in uml
    int32 id = 6;
  }
}

message LocationMessage{
  string country = 1;
  string city = 2;
  string street = 3;
  string zipcode = 4;
  int64 coordinateX = 5;
  int64 coordinateY = 6;
}

message DriverMessage{
  string name = 1;
  string phone = 2;

  //imo that's needed although not included in uml
  int32 id = 3;
}

message JoinRideDto{
  int32 rideId = 1;
  string passengerName = 2;
  string passengerPhone = 3;
}

message ConfirmationMessage{
  string confirmationMessage = 1;
}
